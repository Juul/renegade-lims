'use strict';

var path = require('path');
var fs = require('fs');

module.exports = {

  // Connect to this replication server
  host: 'localhost',
  port: 4444,
  serverTLSCert: fs.readFileSync('tls/server-cert.pem'),

  // HTTP server socket
  webHost: 'localhost',
  webPort: 8000,
  
  dataPath: './data',
  staticPath: './static',
  staticUserPath: './user-static',
  
  tlsKey: fs.readFileSync('tls/client-key.pem'),
  tlsCert: fs.readFileSync('tls/client-cert.pem'),
  
  tlsPeers: [
  /*
    {
      type: 'lab', // lab peers have full access to db
      description: "some computer",
      cert: fs.readFileSync('tls/clients/lab.localhost.pem')
    },
    {
      type: 'field', // field peers can't access lab inventory
      description: "juul's laptop",
      cert: fs.readFileSync('tls/clients/field.localhost.pem')
    },
    {
      type: 'lab-device', // lab devices have no database access at all
      description: "label printer",
      cert: fs.readFileSync('tls/clients/lab-device.localhost.pem')
    },
    */
  ],
  
  loginToken: {
    secret: "MY UNIQUE SECRET", // must be a server-unique secret
    expiration: 14 // login token expiration in days
  },

  // If a user with this name doesn't exist
  // then this user will be created as an admin
  initialUser: {
    name: "admin",
    email: "admin@example.org",
    password: "dontpanic"
  },

  checkTimeEvery: 60 * 60, // how often to check time accuracy (in seconds)
  ntpServers: [
    {host: '0.pool.ntp.org', port: 123},
    {host: '1.pool.ntp.org', port: 123},
    {host: '2.pool.ntp.org', port: 123},
    {host: '3.pool.ntp.org', port: 123}
  ],

  // Device to use for webcam-based DataMatrix scanning
  // Comment out if you don't have such a device
  dataMatrixScanner: "/dev/video0",

  // Settings related to label printing
  labDevice: {

    // Where label image files are stored.
    // Relative to userFilePath
    labelImageFilePath: path.join(__dirname, 'static', 'labels'),

    // hostname where we should listen for printer client connections
    // (this is optional: falls back to settings.hostname if not specified)
    // serverHost: "localhost",

    // port where we should listen for printer client connections
    serverPort: 4200,

    // path to the host ssh private key
    hostKey: path.join(__dirname, 'labdevice', 'hostkey'),

    // path to directory containing the public keys of authorized labdevice clients
    clientKeys: path.join(__dirname, 'labdevice', 'client_keys')
  }
  
};
